name: Build Configs

on:
  release:
    types: [published]

  workflow_dispatch:

jobs:
  Build-V2V3:
    name: FW
    runs-on: ubuntu-latest
    strategy:
      matrix:
        printer: [V2,V3]
        board: [Stock]
        abl: [Manual,Inductive,BlTouch]
        mesh: [3,5]
        ui: [Marlin,ColourUI]
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO Build
      id: build_configs
      run: |
        echo "::set-output name=filename::SapphirePLUS-${PRINTER}-${ABL}-${MESH}x${MESH}-${BOARD}-${VERSION}-${UI}.bin"
        sed -i "s/#define Compiler 1.*/#define Compiler 0/g" Marlin/Sap.h
        sed -i "s/#define SapphireType.*/#define $PRINTER/g" Marlin/Sap.h
        sed -i "s/#define BoardName.*/#define $BOARD/g" Marlin/Sap.h
        sed -i "s/#define ABL.*/#define $ABL/g" Marlin/Sap.h
        sed -i "s/#define MeshNumber 0.*/#define MeshNumber $MESH/g" Marlin/Sap.h
        sed -i "s/#define UI.*/#define $UI/g" Marlin/Sap.h
        pio run
        mkdir temp
        mv .pio/build/mks_robin_nano35/Robin_nano35.bin temp/
      env:
        PRINTER: ${{ matrix.printer }}
        BOARD: ${{ matrix.board }}
        ABL: ${{ matrix.abl }}
        MESH: ${{ matrix.mesh }}
        UI: ${{ matrix.ui }}
        VERSION: ${{ env.RELEASE_VERSION }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset  
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/Robin_nano35.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-V4:
    name: FW
    runs-on: ubuntu-latest
    strategy:
      matrix:
        printer: [V4]
        board: [Stock]
        abl: [Manual,Inductive,BlTouch]
        mesh: [3,5]
        ui: [Marlin,ColourUI]
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO Build
      id: build_configs
      run: |
        echo "::set-output name=filename::SapphirePLUS-${PRINTER}-${ABL}-${MESH}x${MESH}-${BOARD}-${VERSION}-${UI}.bin"
        sed -i "s/#define Compiler 1.*/#define Compiler 0/g" Marlin/Sap.h
        sed -i "s/#define SapphireType.*/#define $PRINTER/g" Marlin/Sap.h
        sed -i "s/#define BoardName.*/#define $BOARD/g" Marlin/Sap.h
        sed -i "s/#define ABL.*/#define $ABL/g" Marlin/Sap.h
        sed -i "s/#define MeshNumber 0.*/#define MeshNumber $MESH/g" Marlin/Sap.h
        sed -i "s/#define UI.*/#define $UI/g" Marlin/Sap.h
        sed -i "s/mks_robin_nano35.*/mks_robin_nano_v1_3_f4/g" platformio.ini
        pio run
        mkdir temp
        mv .pio/build/mks_robin_nano_v1_3_f4/Robin_nano35.bin temp/
      env:
        PRINTER: ${{ matrix.printer }}
        BOARD: ${{ matrix.board }}
        ABL: ${{ matrix.abl }}
        MESH: ${{ matrix.mesh }}
        UI: ${{ matrix.ui }}
        VERSION: ${{ env.RELEASE_VERSION }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset  
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/Robin_nano35.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary
  Build-VL:
    name: FW
    runs-on: ubuntu-latest
    strategy:
      matrix:
        printer: [VL]
        board: [Stock]
        abl: [Inductive]
        mesh: [3,5]
        ui: [Marlin,ColourUI]
    steps:
    - uses: actions/checkout@v2
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v2
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v2
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO Build
      id: build_configs
      run: |
        echo "::set-output name=filename::SapphirePLUS-${PRINTER}-${ABL}-${MESH}x${MESH}-${BOARD}-${VERSION}-${UI}.bin"
        sed -i "s/#define Compiler 1.*/#define Compiler 0/g" Marlin/Sap.h
        sed -i "s/#define SapphireType.*/#define $PRINTER/g" Marlin/Sap.h
        sed -i "s/#define BoardName.*/#define $BOARD/g" Marlin/Sap.h
        sed -i "s/#define ABL.*/#define $ABL/g" Marlin/Sap.h
        sed -i "s/#define MeshNumber 0.*/#define MeshNumber $MESH/g" Marlin/Sap.h
        sed -i "s/#define UI.*/#define $UI/g" Marlin/Sap.h
        pio run
        mkdir temp
        mv .pio/build/mks_robin_nano35/Robin_nano35.bin temp/
      env:
        PRINTER: ${{ matrix.printer }}
        BOARD: ${{ matrix.board }}
        ABL: ${{ matrix.abl }}
        MESH: ${{ matrix.mesh }}
        UI: ${{ matrix.ui }}
        VERSION: ${{ env.RELEASE_VERSION }}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.2.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset  
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: temp/Robin_nano35.bin
        asset_name: ${{ steps.build_configs.outputs.filename }}
        asset_content_type: application/x-binary

